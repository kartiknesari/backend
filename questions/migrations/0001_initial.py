# Generated by Django 5.2.7 on 2025-10-30 05:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(help_text='URL-safe identifier', unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Domain',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(max_length=100)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='questions.domain')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('domain', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('num', 'Numerical'), ('case', 'Open-Ended'), ('diag', 'Diagram')], db_index=True, max_length=5)),
                ('text', models.TextField(help_text='LaTeX supported. Use $$ for display math.')),
                ('explanation', models.TextField(blank=True, help_text='Solution / explanation shown after grading')),
                ('difficulty', models.PositiveSmallIntegerField(help_text='1 = easy, 5 = expert', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('points', models.PositiveSmallIntegerField(default=1, help_text='Score weight')),
                ('time_estimate_seconds', models.PositiveSmallIntegerField(default=120, help_text='Expected time')),
                ('data', models.JSONField(default=dict, help_text='\n        MCQ: {"options": ["A", "B", ...], "correct": "A", "shuffle": true}\n        NUM: {"answer": 42.0, "unit": "kPa", "tolerance": 0.02}\n        DIAG: {"image_url": "...", "hotspots": [{"x":10,"y":20,"label":"Pump"}]}\n        CASE: {"rubric": {"criteria": "Safety", "max": 5}}\n        SIM: {"scenario": "json", "expected_output": {...}}\n        ', verbose_name='question_types_specific_data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_questions', to=settings.AUTH_USER_MODEL)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='questions.domain')),
                ('topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='questions.topic')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['domain', 'type'], name='questions_q_domain__175340_idx'), models.Index(fields=['difficulty'], name='questions_q_difficu_5db314_idx'), models.Index(fields=['topic'], name='questions_q_topic_i_d521f1_idx')],
            },
        ),
    ]
